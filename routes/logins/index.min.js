'use strict';const express=require("express"),app=express(),router=express.Router(),User=require("../../models/User");bcrypt=require("bcryptjs");passport=require("passport");LocalStrategy=require("passport-local").Strategy;router.all("/*",(a,b,c)=>{a.app.locals.layout="logins";c()});router.get("/signin",(a,b)=>{b.render("home/login",{title:"Signin"})});router.get("/signup",(a,b)=>{b.render("home/register",{title:"Signup"})});
router.post("/signup",(a,b)=>{User.findOne({email:a.body.email}).then(c=>{if(c)a.flash("error_msg","Email already exists"),b.redirect("/logs/signup");else{const d=new User;d.email=a.body.email;d.fullname=a.body.fullname;d.password=a.body.password;bcrypt.genSalt(10,(e,f)=>{bcrypt.hash(a.body.password,f,(g,k)=>{g&&console.log(g);d.password=k;d.save().then(h=>{a.flash("success_msg","Account created. Signin now");b.redirect("/logs/signin")}).catch(h=>console.log(h))})})}}).catch(c=>console.log(c))});
passport.use(new LocalStrategy({usernameField:email}),(a,b,c)=>{User.findOne({email:a}).then(d=>{if(d)bcrypt.compare(b,d.password,(e,f)=>{e&&console.log(e);return f?c(null,d):c(null,!1,{message:"Password mismatch. Try again!"})});else return c(null,!1,{message:"Email not recognised. Try again!"})}).catch(d=>console.log(d))});passport.serializeUser(function(a,b){b(null,a.id)});passport.deserializeUser(function(a,b){User.findById(a,function(c,d){b(c,d)})});
router.post("/login",(a,b,c)=>{passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/logs/signin",failureFlash:!0})(a,b,c)});router.get("/logout",(a,b)=>{a.logout();b.redirect("/")});module.exports=router;