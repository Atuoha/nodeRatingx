'use strict';const express=require("express"),app=express(),router=express.Router(),User=require("../../models/User"),bcrypt=require("bcryptjs"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy;router.all("/*",(a,b,d)=>{a.app.locals.layout="logins";d()});router.get("/signin",(a,b)=>{b.render("home/login",{title:"Signin"})});router.get("/signup",(a,b)=>{b.render("home/register",{title:"Signup"})});router.get("/forgot",(a,b)=>{b.render("home/forgot",{title:"Forgot"})});
router.post("/signup",(a,b)=>{a.checkBody("fullname","Fullname is required").notEmpty();a.checkBody("fullname","Fullname should not be less than five characters").isLength({min:5});a.checkBody("email","Email is required").notEmpty();a.checkBody("email","Email is invalid").isEmail();a.checkBody("password","Password is required").notEmpty();a.checkBody("password","Password should not be less than eight characters").isLength({min:8});a.checkBody("password","Password must contain at least one number").match("/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/");
let d=a.validationErrors();if(d){let c=[];d.forEach(e=>{c.push(e.msg);b.redirect("/logs/signup")});a.flash("error",c)}else User.findOne({email:a.body.email}).then(c=>{if(c)a.flash("error_msg","Email already exists"),b.redirect("/logs/signup");else{const e=new User;e.email=a.body.email;e.fullname=a.body.fullname;e.password=a.body.password;bcrypt.genSalt(10,(f,k)=>{bcrypt.hash(a.body.password,k,(g,l)=>{g&&console.log(g);e.password=l;e.save().then(h=>{a.flash("success_msg","Account created. Signin now");
b.redirect("/logs/signin")}).catch(h=>console.log(h))})})}}).catch(c=>console.log(c))});passport.use(new LocalStrategy({usernameField:"email"},(a,b,d)=>{User.findOne({email:a}).then(c=>{if(c)bcrypt.compare(b,c.password,(e,f)=>{e&&console.log(e);return f?(console.log(`logged in as ${c.email}`),d(null,c)):d(null,!1,{message:"Password mismatch. Try again!"})});else return d(null,!1,{message:"Email not recognised. Try again!"})}).catch(c=>console.log(c))}));
passport.serializeUser(function(a,b){b(null,a.id)});passport.deserializeUser(function(a,b){User.findById(a,function(d,c){b(d,c)})});router.post("/login",(a,b,d)=>{passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/logs/signin",failureFlash:!0})(a,b,d)});router.post("/forgot",(a,b)=>{User.findOne({email:a.body.email}).then(d=>{d?a.flash("success_msg","Password reset link has been sent!"):a.flash("error_msg","Email not recognized!");b.redirect("/logs/forgot")})});
router.get("/logout",(a,b)=>{a.logout();b.redirect("/")});module.exports=router;